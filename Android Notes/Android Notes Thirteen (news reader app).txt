

String url = "";
Url url;
HttpURLConnection httpURLConnection;

public class MainActivity extends AppCompatActivity{
    ArrayList<String> titles = new ArrayList<>();
    ArrayList<String> contents = new ArrayList<>();
    ArrayAdapter adapter;
    SQLiteDatabase articleDB;

    @Override
    protected void onCreate(Bundle savedInstanceState){
        super.onCreat(savedInstanceState);
        setConentView(R.layout.activity_main);

        String website_url = "https://hacker-news.firbaseio.com/v0/topstories.json?print=pretty";

        articleDB = this.openOrCreateDatabase("Articles", MODE_PRIVATE, null);
        articleDB.execSQL("CREATE TABLE IF NOT EXIST articles (id INTEGER PRIMARY KEY, articleId INTEGER, title VARCHAR, content VARCHAR)");

        DownloadTask task = new DownloadTask();
        try{
            task.execute(website_url);
        }catch(Exception e){
            e.printStackTrace();
        }

        ListView listView = findViewById(R.id.listView);
        adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1, titles);
        listView.setAdapter(adapter);

        updateListView();

    }

}

public void updateListView(){
    Cursor c = articleDB.rawQuery("SELECT * FROM articles", null);
    int contentIndex = c.getColumnIndex("content");
    int titleIndex = c.getColumnIndex("title");
    if (c.moveToFirst()){
        titles.clear();
        contents.clear();
        do{
            titles.add(c.getString(titleIndex));
            contents.add(c.getString(contentIndex));
        }while(c.moveToNext());
        adapter.notifyDateSetChanged();
    }
}

public class DownloadTask extends AsyncTask<String, void, String>{
    @Override
    protected String doInBackground(Strings...urls){
        String result = "";
        try{
            url = new URL(urls[0]);
            httpURLConnection = (HttpURLConnection) url.openConnection();
            InputStream inputStream = httpURLConnection.getInputStream();
            InputStreamReader reader = new InputStreamReader(inputStream);
            
            int data = reader.read();
            while(data != -1){
                char current = (char) data
                result += current;
                data = reader.read();
            }

            JSONArray jsonArray = new JSONArray(result);
            int numberOfItem = 20;
            if  (jsonArray.lenght() < 20){
                numberOfItem = jsonArray.lenght();
            }

            articleDB.execSQL("DELETE FROM articles");

            for (int i = 0; i < numberOfItem; i++){
                String articleId = jsonArray.getString(i);
                url = new URL("https://hacker-news.firebaseio.com/v0/item/" + articleId + ".json?print=pretty");
                httpURLConnection = (HttpURLConnection) url.openConnection();
                inputStream = httpURLConnection.getInputStream();
                reader = new InputStreamReader(inputStream);
            
                data = reader.read();
                String articleInfo = "";
                while(data != -1){
                    char current = (char) data
                    articleInfo += current;
                    data = reader.read();
                }

                Log.i("ArticleInfo", articleInfo);

                JSONObject jsonObject = new JSONObject(articleInfo);
                if (!jsonObject.isNull("title") && !jsonObject.isNull("url)){
                    String articleTitle = jsonObject.getString("title");
                    String articleUrl = jsonObject.getString("url");
                    Log.i("Title and URL", articleTitle + articleUrl);
                    url = new URL(articleUrl);
                    httpURLConnection = (HttpURLConnection) url.openConnection();
                    InputStream stream = httpURLConnection.getInputStream();
                    InputStreamReader reader = new InputStreamReader(stream);
                    data = reader.read();
                    String articleContent = "";
                    while(data != -1){
                        char current = (char) data;
                        articleContent += current;
                        data.reader.read();
                    }
                    Log.i("HTML", articleContent);
                    String sql = "INSERT INTO articles (articleId, title, content) VALUES (?, ?, ?)";
                    SQLiteStatement statement = articleDB.compileStatement(sql);
                    statement.bindString(1. articleId);
                    statement.bindString(2. articleTitle);
                    statement.bindString(3. articleContent);
                    statement.execute();
                }

            }
            
            Log.i("URL Content", result)
            return result;
        }catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }

    @Override
    protected void onPostExecute(String s){
        super.onPostExecute(s);
        updateListView();
    }

}