

-> creat new java class
public class Note{
    private String title;
    private String description;
    private String documentId;
    private int priority;
    public Note(){
        // needed 
        // firebase needed no-arg constructor
    }
    public Note(String title, String description, int priority){
        this.title = title;
        this.description = description;   
        this.priority = priority;
    }
    // only in this note object
    @Exclude
    public String getDocumentId(){
        return documentId;
    }
    public void setDocumentId(String documentId){
        documentId = documentId;
    }
    public String getTitle(){
        return title;
    }
    public void setTitle(String title){
        title = title;
    }
    public String getDescription(){
        return title;
    }
    public void setDescription(String description){
        description = description;
    } 
    public int getPriority(){
        return priority;
    }
    public void setPriority(int priority){
        priority = priority;
    }
}

private static final String KEY_TITLE = "title";
private static final String KEY_DESCRIPTION = "description";

private EditText mTitle;
private EditText mDescription;
private EditText mPriority;
private TextView mTextViewData

// FirebaseFirestore reference
private FireabaseFirestore myDb = FireabaseFirestore.getInstance();
// instance of CollectionReference
private CollectionReference notebookReference = myDb.collection("Notebook");
// instance of DocumentReference 
private DocumentReference noteReference = myDb.collection("Notebook").document("My First Note");

mTitle = findViewById(R.id.edt_title);
mDescription = findViewById(R.id.edt_description);
mPriority = findViewById(R.id.edt_priority);
mTextViewData = findViewById(R.id.txt_data);

int priority = Integer.parseInt(mPriority.getText().toString());
String title = mTitle.getText().toString();
String description = mDescription.getText().toString();

// save note
public void addNote(){
    if  (priority.length() == 0){
        priority = 0;
    }
    Note note = new Note(title, description, priority);
    notebookReference.add(note);
}

// load note
public void loadNote(){
    notebookReference.get()
        .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>(){
            @Override
            public void onSuccess(QuerySnapshot queryDocumentSnapshots){
                String data = "";
                for(QueryDocumentSnapshot snapshot : queryDocumentSnapshots){
                    Note note = snapshot.toObject(Note.class);
                    note.setDocumentId(snapshot.getId());
                    String documentId = note.getDocumentId();
                    String title = note.getTitle();
                    String description = note.getDescription();
                    int priority = note.getPriority();
                    data += "DocumentId: " + documentId + "\n" + "Title: " + title + "\n" + "Description " + description + "\n" + "Priority: " + priority";
                }
                mTextViewData.setText(data);
            }
        });
        .addOnFailureListener{

        }
}

// load note in real time
@Override
protected void onStart(){
    super.onStart();
    notebookReference.addSnapshotListener(this, new EventListener<QuerySnapshot>(){
        @Override
        public void onEvent(QuerySnapshot queryDoumentSnapshots, FirebaseFirestoreexception e){
            if(e != null){
                return;
            }
            String data = "";
            for(QueryDocumentSnapshot snapshot : queryDocumentSnapshots){
                Note note = snapshot.toObject(Note.class);
                note.setDocumentId(snapshot.getId());
                String documentId = note.getDocumentId();
                String title = note.getTitle();
                String description = note.getDescription();
                int priority = note.getPriority();
                data += "DocumentId: " + documentId + "\n" + "Title: " + title + "\n" + "Description " + description + "\n" + "Priority: " + priority";
            }
            mTextViewData.setText(data);
        }
    });
}


if you wanna query 
here is the sample of load note in real time 
@Override
protected void onStart(){
    super.onStart();
    // notebookReference.hereIsTheQuery.addOnWhatSoEverListener
    notebookReference
        .whereGreaterThanOrEqualTo("priority", 2)
        .orderBy("priority", Query.Direction.DESCENDING)
        .limit(20)
        .get()
        .addOnSuccessListener{
            
        }
}